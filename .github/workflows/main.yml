name: CI-pipeline
 
on:
  push:
    brancshes: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Display repo env variable
      run: echo $FIREBASE_CONFIG

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        pip install poetry
        cd app/backend/src
        poetry install

    - name: Generate coverage report
      run: |
        cd app/backend
        TESTING=true poetry run pytest --cov=src tests/ --cov-report=xml:cobertura.xml --cov-report term-missing
        COVERAGE=$(poetry run python3 ../../ci/code_coverage.py)
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        COLOR=$(poetry run python3 ../../ci/color_coverage.py $COVERAGE)
        echo "COLOR=$COLOR" >> $GITHUB_ENV

    - name: Check coverage
      uses: dennisjensen95/coverage-scope@v0.5.0
      with: 
        coverage-filepath: app/backend/cobertura.xml
        branch: main
        threshold-total: 70
        threshold-change: 50  
      
    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: f2129f63adbf39fa6d08dd0f9d0d4132
        filename: code-coverage-template.json
        label: Code coverage
        message: ${{ env.COVERAGE }}%
        color: ${{ env.COLOR }}

  deploy:
    needs: build
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: |
          cd app/
          flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}